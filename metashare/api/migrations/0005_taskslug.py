# Generated by Django 2.2.3 on 2019-07-31 16:35

import django.db.models.deletion
from django.db import migrations, models


def ensure_task_slugs(apps, schema_editor):
    Task = apps.get_model("api", "Task")
    for task in Task.objects.all():
        # Usually I would inline the logic here, but .ensure_slug comes
        # from a library, and so it seems relatively stable, enough to
        # use with confidence.
        task.ensure_slug()


def remove_task_slugs(apps, schema_editor):
    # We'll just be dropping the table in a moment anyway, so why bother
    # manually removing them?
    pass


class Migration(migrations.Migration):

    dependencies = [("api", "0004_merge_20190727_2032")]

    operations = [
        migrations.CreateModel(
            name="TaskSlug",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text=(
                            "If multiple slugs are active, we will default to the most "
                            "recent."
                        ),
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="slugs",
                        to="api.Task",
                    ),
                ),
            ],
            options={"ordering": ("-created_at",), "abstract": False},
        ),
        migrations.RunPython(ensure_task_slugs, remove_task_slugs),
    ]
